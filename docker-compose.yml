services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: lifeos_app
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: lifeos_db
      # Performance tuning
      POSTGRES_SHARED_PRELOAD_LIBRARIES: pg_stat_statements
      POSTGRES_MAX_CONNECTIONS: 200
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "15432:5432"
    command: |
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c log_statement=mod
      -c log_min_duration_statement=1000
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lifeos_app -d lifeos_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  n8n:
    image: n8nio/n8n:latest
    restart: always
    environment:
      # Node.js IPv6 fix
      - NODE_OPTIONS=--dns-result-order=ipv4first
      # Database Configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=lifeos_db
      - DB_POSTGRESDB_USER=lifeos_app
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD}
      
      # n8n Core Configuration
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_LISTEN_ADDRESS=0.0.0.0
      - N8N_WORKER_SERVER_ADDRESS=0.0.0.0
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
      
      # Webhook Configuration
      - WEBHOOK_URL=${N8N_WEBHOOK_BASE_URL}
      - N8N_WEBHOOK_BASE_URL=${N8N_WEBHOOK_BASE_URL}
      - SUBFLOW_BASE_URL=${N8N_WEBHOOK_BASE_URL}
      
      # Execution Configuration
      - GENERIC_TIMEZONE=America/Denver
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_DATA_PRUNE=true
      - EXECUTIONS_DATA_MAX_AGE=168
      
      # External API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      
      # Database Access for Subflows
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=lifeos_db
      - DB_USER=lifeos_app
      - DB_PASSWORD=${DB_PASSWORD}
      
      # SBS Ecosystem Configuration
      - SBS_ENVIRONMENT=production
      - LOG_LEVEL=info
      - CORRELATION_ID_ENABLED=true
      
      # Community Packages and Node Configuration
      - N8N_COMMUNITY_PACKAGES_ENABLED=true
      - NODE_PATH=/home/node/.n8n/nodes/node_modules
      
      # API Authentication for Automation
      - N8N_API_AUTH_ACTIVE=true
      - N8N_API_AUTH_API_KEY=n8n_api_4f7d9e2b8a6c1f3e5d7b9c4e8f2a6d1b9e7c3f5a8d2b4e7c9f1a3e6d8b5c2f7a9e4d1b6c8f
      
      # Session and Authentication Configuration
      - N8N_USER_MANAGEMENT_DISABLED=false
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
      - N8N_DISABLE_UI=false
      - N8N_BASIC_AUTH_ACTIVE=false
      
      # SSL Certificate Configuration
      - NODE_EXTRA_CA_CERTS=/certs/gehealthcare-ca-bundle.pem
      
    ports:
      - "15678:5678"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./data/n8n:/home/node/.n8n
      - ./backups/n8n:/backup:rw
      - ./certs:/certs:ro
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  pg-listener:
    build: ./pg-listener
    restart: always
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=lifeos_app
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=lifeos_db
      - N8N_WEBHOOK_BASE_URL=${N8N_WEBHOOK_BASE_URL}
      - LOG_LEVEL=info
      - NOTIFICATION_CHANNELS=system_update,unified_event
    depends_on:
      postgres:
        condition: service_healthy
      n8n:
        condition: service_started
    volumes:
      - ./logs/pg-listener:/app/logs

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "18080:8080"
    depends_on:
      - postgres
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=pepa-linha-dark

  # Optional: Redis for caching and session management
  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "16379:6379"
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Optional: Monitoring with basic metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    restart: always
    environment:
      - DATA_SOURCE_NAME=postgresql://lifeos_app:${DB_PASSWORD}@postgres:5432/lifeos_db?sslmode=disable
    ports:
      - "19187:9187"
    depends_on:
      - postgres

networks:
  default:
    name: sbs-network
    driver: bridge