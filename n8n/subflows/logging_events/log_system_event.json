{
  "name": "SUBFLOW: Log System Event",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "subflow-log-system-event",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook_log_system_event",
      "name": "Webhook - Log System Event",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        250,
        300
      ],
      "webhookId": "subflow-log-system-event"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "system_id_check",
              "leftValue": "={{ $json.body.system_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            },
            {
              "id": "event_check",
              "leftValue": "={{ $json.body.event }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "validate_log_data",
      "name": "Validate Log Data",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        450,
        300
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO system_logs (system_id, event, details, created_at) VALUES ($1, $2, $3, NOW()) RETURNING *",
        "options": {}
      },
      "id": "insert_system_log",
      "name": "Insert System Log",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        650,
        200
      ],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "PostgreSQL account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"log_id\": $('Insert System Log').item.json.id, \"logged_at\": $('Insert System Log').item.json.created_at } }}",
        "options": {}
      },
      "id": "respond_success",
      "name": "Respond Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        850,
        200
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": \"Missing required fields: system_id and event are required\" } }}",
        "options": {
          "responseCode": "400"
        }
      },
      "id": "respond_error",
      "name": "Respond Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        650,
        400
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "webhook_log_system_event": {
      "main": [
        [
          {
            "node": "validate_log_data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "validate_log_data": {
      "main": [
        [
          {
            "node": "insert_system_log",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "respond_error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insert_system_log": {
      "main": [
        [
          {
            "node": "respond_success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "subflow-log-system-event",
  "tags": [
    "subflow",
    "logging",
    "reusable"
  ],
  "staticData": null,
  "triggerCount": 0,
  "updatedAt": "2025-10-30T15:57:49.%fZ",
  "createdAt": "2025-10-30T15:57:49.%fZ"
}
